/*!
 * @pixi/filter-pixelate - v2.5.0
 * Compiled Sun, 13 Jan 2019 12:59:55 UTC
 *
 * @pixi/filter-pixelate is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
!function(r,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("pixi.js")):"function"==typeof define&&define.amd?define(["exports","pixi.js"],e):e((r=r||self).__filters={},r.PIXI)}(this,function(r,e){"use strict";var o="attribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n\r\nuniform mat3 projectionMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n    vTextureCoord = aTextureCoord;\r\n}",n="precision mediump float;\r\n\r\nvarying vec2 vTextureCoord;\r\n\r\nuniform vec2 size;\r\nuniform sampler2D uSampler;\r\n\r\nuniform vec4 filterArea;\r\n\r\nvec2 mapCoord( vec2 coord )\r\n{\r\n    coord *= filterArea.xy;\r\n    coord += filterArea.zw;\r\n\r\n    return coord;\r\n}\r\n\r\nvec2 unmapCoord( vec2 coord )\r\n{\r\n    coord -= filterArea.zw;\r\n    coord /= filterArea.xy;\r\n\r\n    return coord;\r\n}\r\n\r\nvec2 pixelate(vec2 coord, vec2 size)\r\n{\r\n\treturn floor( coord / size ) * size;\r\n}\r\n\r\nvoid main(void)\r\n{\r\n    vec2 coord = mapCoord(vTextureCoord);\r\n\r\n    coord = pixelate(coord, size);\r\n\r\n    coord = unmapCoord(coord);\r\n\r\n    gl_FragColor = texture2D(uSampler, coord);\r\n}\r\n",t=function(r){function e(e){void 0===e&&(e=10),r.call(this,o,n),this.size=e}r&&(e.__proto__=r),e.prototype=Object.create(r&&r.prototype),e.prototype.constructor=e;var t={size:{configurable:!0}};return t.size.get=function(){return this.uniforms.size},t.size.set=function(r){"number"==typeof r&&(r=[r,r]),this.uniforms.size=r},Object.defineProperties(e.prototype,t),e}(e.Filter);r.PixelateFilter=t,Object.defineProperty(r,"__esModule",{value:!0})}),Object.assign(PIXI.filters,this?this.__filters:__filters);
//# sourceMappingURL=filter-pixelate.js.map
