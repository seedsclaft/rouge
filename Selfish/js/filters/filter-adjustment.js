/*!
 * @pixi/filter-adjustment - v2.5.0
 * Compiled Sun, 13 Jan 2019 12:59:55 UTC
 *
 * @pixi/filter-adjustment is licensed under the MIT License.
 * http://www.opensource.org/licenses/mit-license
 */
!function(r,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("pixi.js")):"function"==typeof define&&define.amd?define(["exports","pixi.js"],t):t((r=r||self).__filters={},r.PIXI)}(this,function(r,t){"use strict";var n="attribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n\r\nuniform mat3 projectionMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n    vTextureCoord = aTextureCoord;\r\n}",e="varying vec2 vTextureCoord;\r\nuniform sampler2D uSampler;\r\n\r\nuniform float gamma;\r\nuniform float contrast;\r\nuniform float saturation;\r\nuniform float brightness;\r\nuniform float red;\r\nuniform float green;\r\nuniform float blue;\r\nuniform float alpha;\r\n\r\nvoid main(void)\r\n{\r\n    vec4 c = texture2D(uSampler, vTextureCoord);\r\n\r\n    if (c.a > 0.0) {\r\n        c.rgb /= c.a;\r\n\r\n        vec3 rgb = pow(c.rgb, vec3(1. / gamma));\r\n        rgb = mix(vec3(.5), mix(vec3(dot(vec3(.2125, .7154, .0721), rgb)), rgb, saturation), contrast);\r\n        rgb.r *= red;\r\n        rgb.g *= green;\r\n        rgb.b *= blue;\r\n        c.rgb = rgb * brightness;\r\n\r\n        c.rgb *= c.a;\r\n    }\r\n\r\n    gl_FragColor = c * alpha;\r\n}\r\n",i=function(r){function t(t){r.call(this,n,e),Object.assign(this,{gamma:1,saturation:1,contrast:1,brightness:1,red:1,green:1,blue:1,alpha:1},t)}return r&&(t.__proto__=r),t.prototype=Object.create(r&&r.prototype),t.prototype.constructor=t,t.prototype.apply=function(r,t,n,e){this.uniforms.gamma=Math.max(this.gamma,1e-4),this.uniforms.saturation=this.saturation,this.uniforms.contrast=this.contrast,this.uniforms.brightness=this.brightness,this.uniforms.red=this.red,this.uniforms.green=this.green,this.uniforms.blue=this.blue,this.uniforms.alpha=this.alpha,r.applyFilter(this,t,n,e)},t}(t.Filter);r.AdjustmentFilter=i,Object.defineProperty(r,"__esModule",{value:!0})}),Object.assign(PIXI.filters,this?this.__filters:__filters);
//# sourceMappingURL=filter-adjustment.js.map
